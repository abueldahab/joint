x = exampleFunction * 10e3 + 2
if x == 2
  exampleFunction = (arg0, arg1) ~
    nestedExampleFunction = (arg0, arg1) ~
      x = x + 2
      y = x + 4
      z = arg0 - arg1
      a = x * y * arg0 * z
      exampleFunction1 = (arg0, arg1) ~
        nestedExampleFunction2 = (arg0, arg1) ~
          x = x + 2
          y = x + 4
          z = arg0 - arg1
          a = x * y * arg0 * z
          return a
        nestedExamplefunction2(2, 3)
      return a * exampleFunction1
    nestedExamplefunction(2, 3)
  exampleFunction = (arg0, arg1) ~
    nestedExampleFunction = (arg0, arg1) ~
      x = x + 2
      y = x + 4
      z = arg0 - arg1
      a = x * y * arg0 * z
      exampleFunction1 = (arg0, arg1) ~
        nestedExampleFunction2 = (arg0, arg1) ~
          x = x + 2
          y = x + 4
          z = arg0 - arg1
          a = x * y * arg0 * z
          if a != 0 && x + 5 != 2 && x + 4 * z == 0
            return a
          exampleFunction = (arg0, arg1) ~
            nestedExampleFunction = (arg0, arg1) ~
              x = x + 2
              y = x + 4
              # commmmentttsss #
              # commmmentttsss #
              # commmmentttsss #
              z = arg0 - arg1
              a = x * y * arg0 * z
              return a
            nestedExamplefunction(2, 3)
          return exampleFunction * 1 + 2 / 10 
        nestedExamplefunction2(2, 3)
      return a * exampleFunction1
    nestedExamplefunction(2, 3)
exampleFunction = (arg0, arg1) ~
  # if you delete line 'x = x + 2', or if you add a comment in between 'x = x + 2' and nestedExampleFunction, it compiles #
  nestedExampleFunction = (arg0, arg1) ~
    x = x + 2