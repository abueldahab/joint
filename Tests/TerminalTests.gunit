gunit Pass;

// Tests on the values of Atom --> STRING and NUMBER
// Exponent is also included as NUMBER can include EXPONENT
// April 2nd, 2012
// AML2194

NUMBER:
	"a" FAIL					// test1
	"4" OK						// test2	   
        "[" FAIL					// test3    
        "." FAIL					// test4 
        "4a" FAIL					// test5
        "4929283838283" OK				// test6  
        "a723" FAIL					// test7
        "_hey" FAIL					// test8
        "-4" OK						// test9
        "\"4\"" FAIL					// test10
        "2.394" OK					// test11
        "-203.30" OK					// test12
        "4+4" FAIL					// test13
        "2;3" FAIL					// test14
        "2@8" FAIL					// test15
        "2e3" OK					// test16
        "2e-3" OK					// test17
        "3.13E4" OK					// test18

STRING:
       "\"hey there\"" OK				// test19
       "\"whatsupwhsop\"" OK				// test20
       "\"whatsu2232pwhsop\"" OK			// test21
       "\"22122whatsupwhsop\"" OK			// test22
       "\"..12.3408u23@#$$hatsupwhsop\"" OK		// test23
	"\"*$()*#U$*dkdldl]]d]d]whatsupwhsop\"" OK	// test24

EXPONENT:
       "e4" OK						// test25		
       "e492" OK					// test26
       "E23" OK						// test27
       "e3.10" FAIL					// test28

HEX_DIGIT:
      "0" OK						// test29
      "a" OK						// test30
      "F" OK						// test31
      "28" FAIL						// test32

OCTAL_ESC:
       "\\1" OK						// test33
       "\\12" OK					// test34
       "\\a" FAIL					// test35
       "\\123" OK					// test36
       "\\1234" FAIL					// test37
       "\\294" FAIL					// test38
       "\\123a" FAIL					// test39

UNICODE_ESC:
       "\\u1234" OK					// test40
       "\\u12" FAIL					// test41
       "\\u2sk" FAIL					// test42

WS:
  " " OK						// test43
  "\t" OK						// test44
  "\r" OK						// test45
  "hey" FAIL						// test46
  "   " FAIL						// test47
  "_" FAIL						// test48
  "-" FAIL						// test49

LT:
   "\n" OK						// test50
   "\r\n" OK						// test51
   " " FAIL						// test52
   "\n\n" OK						// test53
   "\n\r\n\r\n" OK					// test54
   "\n\r\n\r\n\n\r\n\r\n\n\r\n\r\n\n\n" OK	// test55
   "\n\n\r\n\r\n\n\n\n\n\n" OK			// test56
   "\r\r\n" FAIL					// test57

COMMENT:
  "// \n" OK						// test58
  "// hey there\n" OK					// test59
  "// forgot to put an end line" FAIL					// test60
  "/* we can do this too */" OK					// test61
  "/* slash star start, star slash end */" OK					// test62
  "*/ this doesnt work /*" FAIL					// test63
  "// /* technically this works because we can put anything after the slashes */\n" OK					// test64
  "// /* but not this */" FAIL					// test65

ID:
   "id2" OK					// test66
   "_idsetgo" OK					// test67
   "cleareyesfullhearts1" OK					// test68
   "4cantstartIDswithnumbers" FAIL					// test69
   "_3thisworks" OK					// test70
   "32232323" FAIL					// test71
   "CapitalsWork2" 	OK				// test72

BOP: 
   "||" OK				// test73
   "|" FAIL				// test74
   "&&" OK				// test75
   "&" FAIL				// test76
   "||&&" FAIL				// test77
   "*" FAIL				// test78

CMP:
   "<" OK				// test79
   ">" OK				// test80
   "==" OK				// test81
   ">=" OK				// test82
   "<=" OK				// test83
   "<>" OK				// test84
   "!=" OK				// test85
   "=!" FAIL				// test86
   ">>" FAIL				// test87
   "===" FAIL				// test88
   "=" FAIL				// test89
   "<<a" FAIL				// test90
   "<A" FAIL				// test91
   "!" FAIL				// test92

ARITH_ASSIGN:
   "+=" OK				// test93
   "-=" OK				// test94
   "*=" OK				// test95
   "/=" OK				// test96
   "%=" OK				// test97
   "==" FAIL				// test98
   "++" FAIL				// test99
   "23-23" FAIL				// test100
   "2+=3" FAIL				// test101
